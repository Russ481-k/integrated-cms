---
alwaysApply: true
description: 통합 CMS 아키텍처 핵심 설계 원칙 및 구조
---

# 통합 CMS 아키텍처 핵심 가이드

## 🏗️ 시스템 아키텍처

이 프로젝트는 **다중 서비스 통합 관리**가 가능한 차세대 CMS 플랫폼입니다.

### 핵심 설계 원칙

- **마이크로서비스 아키텍처**: 서비스별 독립적 운영 및 확장
- **API Gateway 패턴**: Spring Cloud Gateway 기반 통합 라우팅
- **RBAC + ABAC 하이브리드**: 역할 기반 + 속성 기반 권한 시스템
- **기존 기능 재사용**: 기존 CMS 구조 유지하면서 권한 관리만 추가

### 데이터베이스 구조

- **통합 메타 DB**: 서비스 정보, 권한 관리, 관리자 계정 ([03-unified-cms-database-design.md](mdc:.cursor/docs/v2/03-unified-cms-database-design.md))
- **개별 서비스 DB**: 각 서비스별 독립 데이터베이스 유지

### API 구조

```
/api/
├── unified/           # 통합 관리 API
│   ├── auth/         # 인증/인가
│   ├── services/     # 서비스 관리
│   ├── content/      # 통합 콘텐츠 관리
│   ├── admins/       # 관리자 계정 관리
│   └── system/       # 시스템 관리
├── service1/         # 서비스1 전용 API
└── serviceN/         # 서비스N 전용 API
```

## 🔐 권한 시스템

### 권한 검증 우선순위
1. **명시적 거부 권한** (DENY) - 최우선
2. **개별 사용자 허용 권한** (USER ALLOW)
3. **그룹 권한** (GROUP ALLOW)
4. **역할 기반 기본 권한** (ROLE PERMISSION)
5. **기본 거부** (권한 없음)

### 핵심 요구사항
- 그룹 권한 + 개별 사용자 추가 권한 (권한 제거 불가)
- 서비스별 선택적 접근 제어
- 메뉴/기능별 세분화된 권한 관리

자세한 권한 시스템은 [06-unified-cms-permission-system.md](mdc:.cursor/docs/v2/06-unified-cms-permission-system.md)를 참조하세요.